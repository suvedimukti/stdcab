[{"path":"https://suvedimukti.github.io/stdcab/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 stdcab authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_cluster_sample.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Spatial Clustering of Point Data for Machine Learning of Multiclass Classification Problems","text":"Ecological data usually inherent spatial structures; nearer things similar distant things. relationship can exist spatial scale local global positive spatial autocorrelation nonzero covariance spatially proximal observations proximal values. definition imposes need means measure, based sample data values, covariance nearby points decide whether covariance consistent random spatial arrangement values. non-randomness data problematic. Correlated data allows uncover patterns process. However, parametric statistical analysis data problems can arise 1) non-randomness error; 2) pseudo-replication-many observations made within distance observations spatially structured, 3) predictor variables (Independent explanatory variables) often correlated dependence structures, resulting model can -inflate model’s accuracy wholly partially removing residual structures. Parametric models can address dependence structures data (e.g., autoregressive mixed model), least theory. However, practice, model specification bias together structural -fitting, can seriously impair diagnostic evaluations model. , well-known popular machine learning models (e.g., random forest) don’t allow accounting spatial dependence structures.","code":""},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_cluster_sample.html","id":"what-happens-with-non-parametric-models","dir":"Articles","previous_headings":"Introduction","what":"What happens with non-parametric models?","title":"Spatial Clustering of Point Data for Machine Learning of Multiclass Classification Problems","text":"ideal model building ( machine learning), evaluation validation performed using independent data. example, model evaluation data come within geographic extent model built (spatially distinct). Two scenarios may arise cases: 1) either independent data exist; usually, tend focus collecting data within spatial extent study area. classification problems remote sensing data, may collect sample data -screen (heads-) digitization. can’t guarantee relationship data still . 2) Data set hand may meet assumption independence. current paradigm evaluation predictive error machine learning model(s) cross-validation, usually use hold-(saving percent total sample data). key idea training data independent hold-(validation) data. However, training points tend cluster due resources time limitations. possible create independent data apriori, usually case; can’t certain independence data spatial dependence can happen scale. Hold-data, however, necessarily get rid problem hand, testing/validation data can drawn nearby location dependence structure. Therefore, resulting model favor complex, accuracy metrics optimistic.","code":""},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_cluster_sample.html","id":"how-to-deal-with-it","dir":"Articles","previous_headings":"Introduction","what":"How to deal with it","title":"Spatial Clustering of Point Data for Machine Learning of Multiclass Classification Problems","text":"several ways address spatial dependency data parametric analysis autoregressive (AR) models, generalized least squares (GLS) mixed effects models. However, even remedial measures, problem can still exist. invites strategic blocking observations. stdcab offers two approaches: Clustering: Partitioning Hierarchical clustering Blocking: Splitting coordinate space regular grids","code":""},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_cluster_sample.html","id":"clustering","dir":"Articles","previous_headings":"","what":"Clustering","title":"Spatial Clustering of Point Data for Machine Learning of Multiclass Classification Problems","text":"Clustering can done k-fold cross validation repeated k-fold cross validation. Two two options possible 1) partitioning clustering (using coordinates) 2) hierarchical clustering.","code":""},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_cluster_sample.html","id":"partitioning-clustering","dir":"Articles","previous_headings":"Clustering","what":"Partitioning clustering","title":"Spatial Clustering of Point Data for Machine Learning of Multiclass Classification Problems","text":"kmeans clustering one widely used un-supervised multivariate analysis. Now dataframe() training testing data can created list splits Visualize training testing data fold using ggplot2() package folds using ggplot2","code":"data(\"landcover\")  # setting seeds  set.seed(1318)  rnd_fold <- spatial_cluster_sample(   data = landcover, coords = NULL, v = 10,   spatial = TRUE, clust_method = \"kmeans\" ) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE # create gen_df  gen_df <- function(split) {   gp <- analysis(split) %>%     dplyr::mutate(analysis = \"Training\") %>%     dplyr::bind_rows(assessment(split) %>%       dplyr::mutate(analysis = \"Testing\")) }  def <- purrr::map_df(rnd_fold$splits, gen_df)  # short-cut to add fold information vec <- paste0(\"Fold\", 1:10)  # folding information replication fold <- rep(vec, each = 1922) # apply fold  def$fold <- fold # check packages that are not installed # it threw error in debian system  pkg <- c(\"ggplot2\", \"gganimate\")  pkg_check <- lapply(pkg, FUN = function(p) {   if (!require(p, character.only = TRUE)) {     install.packages(p, dependencies = TRUE,repos = \"http://cran.us.r-project.org\")     library(p, character.only = TRUE)   } }) #> Loading required package: ggplot2 #> Loading required package: gganimate # remove coordinates to avoid cluttering  blank_xy <- function() {   theme(     axis.text.x = element_blank(),     # axis.ticks.x=element_blank(),     axis.text.y = element_blank(),     # axis.ticks.y=element_blank()   ) }  vis_fold <- ggplot(def, aes(X, Y, color = analysis)) +   geom_point(alpha = 0.7, size = 2) +   coord_fixed() +   theme_bw(base_size = 12) +   labs(color = \"Training/Testing\") +   scale_color_manual(values = c(\"purple\", \"blue\")) +   xlab(\"Longitude (m)\") +   ylab(\"Latitidue (m)\") +   facet_wrap(facets = vars(fold), nrow = 5, scales = \"fixed\") +   blank_xy()"},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_cluster_sample.html","id":"hierarchical-clustering","dir":"Articles","previous_headings":"Clustering","what":"Hierarchical Clustering","title":"Spatial Clustering of Point Data for Machine Learning of Multiclass Classification Problems","text":"spatial_cluster_sample supports hierarchical clustering using stats::hclust function. Unlike, kmeans hierarchical clustering requires number k. version support visualizations many distinct clusters . Number clusters repeats used repeated_spatial_cluster_sample informed data. functionalists added future release.","code":"#> # A tibble: 10 × 2 #>    splits             id     #>    <list>             <chr>  #>  1 <split [1668/254]> Fold01 #>  2 <split [1829/93]>  Fold02 #>  3 <split [1749/173]> Fold03 #>  4 <split [1755/167]> Fold04 #>  5 <split [1717/205]> Fold05 #>  6 <split [1543/379]> Fold06 #>  7 <split [1722/200]> Fold07 #>  8 <split [1738/184]> Fold08 #>  9 <split [1826/96]>  Fold09 #> 10 <split [1751/171]> Fold10 #> <Analysis/Assess/Total> #> <1668/254/1922> #> <Analysis/Assess/Total> #> <1717/205/1922>"},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_cluster_sample.html","id":"visualize","dir":"Articles","previous_headings":"Clustering > Hierarchical Clustering","what":"Visualize","title":"Spatial Clustering of Point Data for Machine Learning of Multiclass Classification Problems","text":"","code":"p_hclus <- ggplot(hdef, aes(X, Y, color = analysis)) +   geom_point(alpha = 0.7, size = 2) +   coord_fixed() +   theme_bw(base_size = 12) +   labs(color = \"Train/Test\") +   scale_color_manual(values = c(\"purple\", \"blue\")) +   xlab(\"Longitude (m)\") +   ylab(\"Latitidue (m)\") +   # transition_states(id,state_length = 2)   labs(     title =       \"Location {previous_state}\"   ) +   theme(plot.title = element_text(hjust = 0.5)) +   gganimate::transition_states(     states = fold,     transition_length = 4,     state_length = 4   )"},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_cluster_sample.html","id":"references","dir":"Articles","previous_headings":"","what":"References @","title":"Spatial Clustering of Point Data for Machine Learning of Multiclass Classification Problems","text":"Julia Silge (2021). spatialsample: Spatial Resampling Infrastructure. https://github.com/tidymodels/spatialsample, https://spatialsample.tidymodels.org. Legendre, P., 1993. Spatial autocorrelation: problem new paradigm? Ecology 74, 1659–1673. Legendre, P., Dale, M.R.T., Fortin, M.-J., Gurevitch, J., Hohn, M., Myers, D., 2002. consequences spatial structure design analysis ecological field surveys. Ecography 25, 601–615. Legendre, P., Fortin, M.J., 1989. Spatial pattern ecological analysis. Miller, J., Franklin, J., Aspinall, R., 2007. Incorporating spatial dependence predictive vegetation models. Ecol. Modell. 202, 225–242. https://doi.org/10.1016/j.ecolmodel.2006.12.012 Miller, J.R., Turner, M.G., Smithwick, E..H., Dent, C.L., Stanley, E.H., 2004. Spatial extrapolation: science predicting ecological patterns processes. BioScience 54, 310–320. Pebesma, E., 2018. Simple Features R: Standardized Support Spatial Vector Data. R Journal 10 (1), 439-446, https://doi.org/10.32614/RJ-2018-009 Tobler, W.R., 1970. computer movie simulating urban growth Detroit region. Econ. Geogr. 46, 234–240. @ exhaustive list references","code":""},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_grid_sample.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Spatial Gridding/Blocking of Point Data for Machine Learning Using Tidymodeling","text":"spatial analysis, creating regular polygons within specific geographic data extent common task. process often employed establish uniform, equally-sized grids, can advantageous tasks uniform sampling retroactive random selection. Spatial tessellation, also known grid splitting, divides extent series sub-extents. sub-extents subsequently used summarize relevant information contained within . context classification, dividing extent training data study area sub-extents sub-units helps reduce spatial structures present data. allows efficient analysis interpretation. instance, one can summarize information within sub-extent, frequency criminal activities across counties number trees 10 km grid. Determining appropriate size sub-units sub-extents can achieved semi-variogram analysis. aim maximize heterogeneity blocks, ensuring resulting spatial grids capture meaningful spatial variations. concept spatial grids bears resemblance randomized control design several aspects. function spatial_grid_sample similar generate tessellations create Fishnet tool ArcGIS Pro ArcGIS desktop software Environmental System Research Institute (ESRI). function supports rectangles squares. width height information can obtained running fit_variogram multiple_variogram functions.","code":""},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_grid_sample.html","id":"create-spatial-grid-of-10km-by-10km","dir":"Articles","previous_headings":"","what":"Create spatial grid of 10km by 10km","title":"Spatial Gridding/Blocking of Point Data for Machine Learning Using Tidymodeling","text":"create spatial grids unit projection system, preferably Universal Transverse Mercator State Plane System. function also allows specify groups sub-grids needs selected case k-fold cross validation. selection sub-grids. version also allows users define rotation point data. handle directional gradient input data.  default option ignores value k splitting data, however expect value. options random selections sub-grids k groups, systematic selection. show_grid option NULL, output grid-map. However, saves created grids observations within grid.","code":"data(landcover)  sp_grid <- spatial_quadgrid_sample(   data = landcover, cellsize = c(10000, 10000),   show_grid = TRUE, fold_selection = \"default\",rotation_angle = -12 ) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE #> Warning in spatial_quadgrid_sample(data = landcover, cellsize = c(10000, : grid #> selection is selected as 'default', input value of k is ignored #-----------------------# sblock <- sp_grid$blocks  gp2 <- ggplot2::ggplot() +   ggplot2::geom_sf(     data = sblock, color = \"blue\",     fill = \"maroon2\",      alpha = 0.04,     size = 0.7   ) gp2"},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_grid_sample.html","id":"spatial-grid-resamples-for-tidy-modeling","dir":"Articles","previous_headings":"","what":"Spatial grid resamples for Tidy-modeling","title":"Spatial Gridding/Blocking of Point Data for Machine Learning Using Tidymodeling","text":"final output data splits tibble. default methods, resultant grids can used leave-one-cross validation. example, total 47 grids 10km width returned. Returns data rsample compatible. case information needs transferred caret compatible format, can easily accomplished using rsample2caretfunction.","code":"# Create spatial grid of 10km by 10km # make manual_rset object msplits <- rsample::manual_rset(splits = sp_grid$splits$splits, ids = sp_grid$splits$id)  # convert to caret compatible format caret_train_test <- rsample::rsample2caret(msplits, c(\"analysis\", \"assessment\"))  caret_train_test[1]$index$Fold01 #>    [1]    4    5    6    7    8   14   15   18   20   22   23   25   27   30 #>   [15]   31   32   33   34   35   36   37   38   39   40   41   42   43   44 #>   [29]   45   46   47   48   49   50   52   53   55   56   57   58   59   61 #>   [43]   62   64   66   70   71   72   73   74   75   76   77   78   79   83 #>   [57]   86   87   88   89   90   91   92   93   94   95  108  116  117  118 #>   [71]  120  121  123  124  125  126  128  129  130  131  132  133  134  135 #>   [85]  136  137  138  139  140  141  142  143  144  145  146  147  148  149 #>   [99]  150  151  152  153  154  155  156  157  158  159  160  161  162  163 #>  [113]  164  165  166  167  168  169  170  171  172  173  174  175  176  177 #>  [127]  178  179  180  181  182  183  184  185  186  187  188  189  190  191 #>  [141]  192  193  194  195  196  197  198  199  200  201  202  203  204  205 #>  [155]  206  207  208  209  210  211  212  213  214  215  216  217  218  219 #>  [169]  220  221  222  223  224  225  226  227  228  229  230  231  232  233 #>  [183]  234  235  236  237  238  239  240  241  242  243  244  245  246  247 #>  [197]  248  249  250  251  252  253  254  255  256  257  258  259  260  261 #>  [211]  262  263  264  265  266  267  268  269  270  271  272  273  274  275 #>  [225]  276  277  278  279  280  281  282  283  284  285  286  287  288  289 #>  [239]  290  291  292  293  294  295  296  297  298  299  300  301  302  303 #>  [253]  304  305  306  307  308  309  310  311  312  313  314  315  316  317 #>  [267]  318  319  320  321  322  323  324  325  326  327  328  329  330  331 #>  [281]  332  333  334  335  336  337  338  339  340  341  342  343  344  345 #>  [295]  346  347  348  349  350  351  352  353  354  355  356  357  358  359 #>  [309]  360  361  362  363  364  365  366  367  368  369  370  371  372  373 #>  [323]  374  375  376  377  378  379  380  381  382  383  384  385  386  387 #>  [337]  388  389  390  391  392  393  394  395  396  397  398  399  400  401 #>  [351]  402  403  404  405  406  407  408  409  410  411  412  413  414  415 #>  [365]  416  417  418  419  420  421  422  423  424  425  426  427  428  429 #>  [379]  430  431  432  433  434  435  436  437  438  439  440  441  442  443 #>  [393]  444  445  446  447  448  449  450  451  452  453  454  455  456  457 #>  [407]  458  459  460  461  462  463  464  465  466  467  468  469  470  471 #>  [421]  472  473  474  475  476  477  478  479  480  481  482  483  484  485 #>  [435]  486  487  488  489  490  491  492  493  494  495  496  497  498  499 #>  [449]  500  501  502  503  504  505  506  507  508  509  510  511  512  513 #>  [463]  514  515  516  517  518  519  520  521  522  523  524  525  526  527 #>  [477]  528  529  530  531  532  533  534  535  536  537  538  539  540  541 #>  [491]  542  543  544  545  546  547  548  549  550  551  552  553  554  555 #>  [505]  556  557  558  559  560  561  562  563  564  565  566  567  568  569 #>  [519]  570  571  572  573  574  575  576  577  578  579  580  581  582  583 #>  [533]  584  585  586  587  588  589  590  591  592  593  594  595  596  597 #>  [547]  598  599  600  601  602  603  604  605  606  607  608  609  610  611 #>  [561]  612  613  614  615  616  617  618  619  620  621  622  623  624  625 #>  [575]  626  627  628  629  630  631  632  633  634  635  636  637  638  639 #>  [589]  640  641  642  643  644  645  646  647  648  649  650  651  652  653 #>  [603]  654  655  656  657  658  659  660  661  662  663  664  665  666  667 #>  [617]  668  669  670  671  672  673  674  675  676  677  678  679  680  681 #>  [631]  682  683  684  685  686  687  688  689  690  691  692  693  694  695 #>  [645]  696  697  698  699  700  701  702  703  704  705  706  707  708  709 #>  [659]  710  711  712  713  714  715  716  717  718  719  720  721  722  723 #>  [673]  724  725  726  727  728  729  730  731  732  733  734  735  736  737 #>  [687]  738  739  740  741  742  743  744  745  746  747  748  749  750  751 #>  [701]  752  753  754  755  756  757  758  759  760  761  762  763  764  765 #>  [715]  766  767  768  769  770  771  772  773  774  775  776  777  778  779 #>  [729]  780  781  782  783  784  785  786  787  788  789  790  791  792  793 #>  [743]  794  795  796  797  798  799  800  801  802  803  804  805  806  807 #>  [757]  808  809  810  811  812  813  814  815  816  817  818  819  820  821 #>  [771]  822  823  824  825  826  827  828  829  830  831  832  833  834  835 #>  [785]  836  837  838  839  840  841  842  843  844  845  846  847  848  849 #>  [799]  850  851  852  853  854  855  856  857  858  859  860  861  862  863 #>  [813]  864  865  866  867  868  869  870  871  872  873  874  875  876  877 #>  [827]  878  879  880  881  882  883  884  885  886  887  888  889  890  891 #>  [841]  892  893  894  895  896  897  898  899  900  901  902  903  904  905 #>  [855]  906  907  908  909  910  911  912  913  914  915  916  917  918  919 #>  [869]  920  921  922  923  924  925  926  927  928  929  930  931  932  933 #>  [883]  934  935  936  937  938  939  940  941  942  943  944  945  946  947 #>  [897]  948  949  950  951  952  953  954  955  956  957  958  959  960  961 #>  [911]  962  963  964  965  966  967  968  969  970  971  972  973  974  975 #>  [925]  976  977  978  979  980  981  982  983  984  985  986  987  988  989 #>  [939]  990  991  992  993  994  995  996  997  998  999 1000 1001 1002 1003 #>  [953] 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 #>  [967] 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 #>  [981] 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 #>  [995] 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 #> [1009] 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 #> [1023] 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 #> [1037] 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 #> [1051] 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 #> [1065] 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 #> [1079] 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 #> [1093] 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 #> [1107] 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 #> [1121] 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 #> [1135] 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 #> [1149] 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 #> [1163] 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 #> [1177] 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 #> [1191] 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 #> [1205] 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 #> [1219] 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 #> [1233] 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 #> [1247] 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 #> [1261] 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 #> [1275] 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 #> [1289] 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 #> [1303] 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 #> [1317] 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 #> [1331] 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 #> [1345] 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 #> [1359] 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 #> [1373] 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 #> [1387] 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 #> [1401] 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 #> [1415] 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 #> [1429] 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 #> [1443] 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 1506 1507 #> [1457] 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 #> [1471] 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 #> [1485] 1536 1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 #> [1499] 1550 1551 1552 1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 #> [1513] 1564 1565 1566 1567 1568 1569 1570 1571 1572 1573 1574 1575 1576 1577 #> [1527] 1578 1579 1580 1581 1582 1583 1584 1585 1586 1587 1588 1589 1590 1591 #> [1541] 1592 1593 1594 1595 1596 1597 1598 1599 1600 1601 1602 1603 1604 1605 #> [1555] 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 1617 1618 1619 #> [1569] 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 #> [1583] 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 #> [1597] 1648 1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 #> [1611] 1662 1663 1664 1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 #> [1625] 1676 1677 1678 1679 1680 1681 1682 1683 1684 1685 1686 1687 1688 1689 #> [1639] 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700 1701 1702 1703 #> [1653] 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714 1715 1716 1717 #> [1667] 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 1729 1730 1731 #> [1681] 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 1745 #> [1695] 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 #> [1709] 1760 1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 #> [1723] 1774 1775 1776 1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 #> [1737] 1788 1789 1790 1791 1792 1793 1794 1795 1796 1797 1798 1799 1800 1801 #> [1751] 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812 1813 1814 1815 #> [1765] 1816 1817 1818 1819 1820 1821 1822 1823 1824 1825 1826 1827 1828 1829 #> [1779] 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842 1843 #> [1793] 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 1857 #> [1807] 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 #> [1821] 1872 1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 #> [1835] 1886 1887 1888 1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 #> [1849] 1900 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 1912 1913 #> [1863] 1914 1915 1916 1917 1918 1919 1920 1921 1922"},{"path":"https://suvedimukti.github.io/stdcab/articles/spatial_grid_sample.html","id":"references","dir":"Articles","previous_headings":"","what":"References @","title":"Spatial Gridding/Blocking of Point Data for Machine Learning Using Tidymodeling","text":"Legendre, P., 1993. Spatial autocorrelation: problem new paradigm? Ecology 74, 1659–1673. Legendre, P., Dale, M.R.T., Fortin, M.-J., Gurevitch, J., Hohn, M., Myers, D., 2002. consequences spatial structure design analysis ecological field surveys. Ecography 25, 601–615. Legendre, P., Fortin, M.J., 1989. Spatial pattern ecological analysis. Miller, J., Franklin, J., Aspinall, R., 2007. Incorporating spatial dependence predictive vegetation models. Ecol. Modell. 202, 225–242. https://doi.org/10.1016/j.ecolmodel.2006.12.012 Miller, J.R., Turner, M.G., Smithwick, E..H., Dent, C.L., Stanley, E.H., 2004. Spatial extrapolation: science predicting ecological patterns processes. BioScience 54, 310–320. @ exhaustive list references","code":""},{"path":"https://suvedimukti.github.io/stdcab/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mukti Subedi. Author, maintainer.","code":""},{"path":"https://suvedimukti.github.io/stdcab/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Subedi M (2023). stdcab: Spatial Thinning, Dependency, Clustering, Blocking Point Data Classification Problems. https://github.com/suvedimukti/stdcab, https://suvedimukti.github.io/stdcab/.","code":"@Manual{,   title = {stdcab: Spatial Thinning, Dependency, Clustering, And Blocking of Point Data for Classification Problems},   author = {Mukti Subedi},   year = {2023},   note = {https://github.com/suvedimukti/stdcab, https://suvedimukti.github.io/stdcab/}, }"},{"path":"https://suvedimukti.github.io/stdcab/index.html","id":"stdcab","dir":"","previous_headings":"","what":"Spatial Thinning, Dependency, Clustering, And Blocking of Point Data \n    for Classification Problems","title":"Spatial Thinning, Dependency, Clustering, And Blocking of Point Data \n    for Classification Problems","text":"goal stdcab package apply spatial thinning multi-class spatial point data, spatial cluster analysis random repeated cross-validations partitions data training testing set compatible tidy-modeling resamples. package allows run semivariance analysis, plotting spatial blocking observations.","code":""},{"path":"https://suvedimukti.github.io/stdcab/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial Thinning, Dependency, Clustering, And Blocking of Point Data \n    for Classification Problems","text":"can install released version stdcab CRAN : install latest stdcab version GitHub use: Repeated Cluster CV: rsample compatible function extended based spatial_cluster_sample, wrapper around spatial_clustering_cv function sptialsample package.","code":"install.packages(\"stdcab\") remotes::install_github('suvedimukti/stdcab')"},{"path":"https://suvedimukti.github.io/stdcab/index.html","id":"load-dataset","dir":"","previous_headings":"","what":"Load dataset","title":"Spatial Thinning, Dependency, Clustering, And Blocking of Point Data \n    for Classification Problems","text":"","code":"# load dataset library(stdcab)  data(landcover)  # create another dataset based on landcover data that comes with the package # dspatial <- landcover  # examine data head(dspatial) #> Simple feature collection with 6 features and 32 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 392210.5 ymin: 3119625 xmax: 399267.2 ymax: 3119778 #> Projected CRS: NAD83 / UTM zone 14N #>       MBLU      MDIS     MENT      MGRN      MHOM      MNDSI     MNDVI #> 1 66.63188 1.6617853 2.950356  79.29950 0.4467591 0.27364541 0.3530703 #> 2 63.39825 1.9870977 2.960603  73.69209 0.4019742 0.29720028 0.4029944 #> 3 69.88172 1.6976533 2.942974  80.93514 0.4405100 0.22758467 0.2885415 #> 4 90.20121 1.1538607 2.595928 101.55721 0.5584459 0.08908733 0.0774211 #> 5 92.37401 0.9766353 2.472715 101.19852 0.6005212 0.04736083 0.0158674 #> 6 63.28209 1.6095205 2.905691  78.96302 0.4605569 0.32877674 0.4410174 #>        MNDWI     MNIR     MPC1     MPC2    MPC23      MRED      MSAVI     MSTD #> 1 0.51515239 138.9199 159.1613 102.4536 202.6218  66.55164 0.51515239 21.25050 #> 2 0.55808490 137.4047 148.8866 104.3592 204.5810  58.23234 0.55808490 19.98415 #> 3 0.43974239 128.5910 161.2001 102.6947 190.8658  71.33220 0.43974239 21.58185 #> 4 0.13333992 121.6026 200.3034 100.9832 169.4937 104.52521 0.13333992 26.70559 #> 5 0.02596568 111.4324 200.0531 100.8161 158.5089 108.05662 0.02596568 26.70048 #> 6 0.60552987 156.1672 159.4131 102.6292 221.1018  60.83709 0.60552987 21.32887 #>        SAVG       SAVI     SBLU      SDIS      SENT      SGRN      SHOM #> 1 0.7719360 0.09421593 8.007267 0.7173829 0.2979607 13.223900 0.1305707 #> 2 1.0951935 0.15705697 9.696568 0.9694563 0.3330230 13.901611 0.1387346 #> 3 0.8193193 0.10658609 7.640749 0.7711866 0.2884212 11.779700 0.1295736 #> 4 0.6762000 0.12961513 8.087468 0.6171818 0.4649801  9.553970 0.1582553 #> 5 0.5402425 0.09479591 5.684382 0.5020353 0.4690081  6.982191 0.1469829 #> 6 1.0425932 0.09469646 8.115348 0.8179208 0.3255548 11.952452 0.1369844 #>       SHPI      SNDSI      SNDVI      SNIR     SPC1      SPC2     SPC3     SRED #> 1 2.064817 0.06072264 0.09421593 19.990943 22.00438 17.457164 3.453199 13.53963 #> 2 2.818856 0.09894260 0.15705697 26.054171 24.42861 25.079633 4.042181 17.20263 #> 3 2.515565 0.05936204 0.10658609 16.465150 20.52350 14.532001 4.098715 14.22547 #> 4 2.451424 0.05418211 0.12961513 12.712686 18.92016 12.433632 3.768943 14.64595 #> 5 1.591254 0.04073361 0.09479591  9.757403 13.83072  8.766206 3.414756 10.42752 #> 6 1.975009 0.06062318 0.09469646 18.062159 20.22403 16.856885 3.163099 13.56793 #>       SSTD                 geometry Class_name #> 1 2.182833 POINT (392210.5 3119625)          4 #> 2 2.590231 POINT (395942.6 3119661)          4 #> 3 1.982273   POINT (393647 3119704)          4 #> 4 2.066033 POINT (397385.1 3119726)          3 #> 5 1.399689 POINT (397434.5 3119731)          3 #> 6 2.185156 POINT (399267.2 3119778)          4  # Class_name is the dependent (response ) data with seven classes (1 through  7)"},{"path":"https://suvedimukti.github.io/stdcab/index.html","id":"visualize-the-data","dir":"","previous_headings":"","what":"Visualize the data","title":"Spatial Thinning, Dependency, Clustering, And Blocking of Point Data \n    for Classification Problems","text":"","code":"# load ggplot 2 for visualization library(ggplot2) ggplot(data = dspatial)+   geom_sf(aes(colour = factor(Class_name)), size = 1.5, alpha = 0.8)+   scale_colour_viridis_d()+   labs(color = \"Land Cover Class\")+   theme_bw(12)"},{"path":"https://suvedimukti.github.io/stdcab/index.html","id":"apply-repeated-cluster-sampling-on-sf-data","dir":"","previous_headings":"","what":"Apply repeated cluster sampling on sf data","title":"Spatial Thinning, Dependency, Clustering, And Blocking of Point Data \n    for Classification Problems","text":"make visualization easy lets make five folds five repeats resulting 25 splits data based kmeans clustering.","code":"# setting seeds set.seed(1318)  spc_rcv <- repeated_spatial_cluster_sample(data = dspatial, v = 5, repeats = 5,                             coords = NULL, spatial = TRUE, clust_method = \"kmeans\",                              dist_clust = NULL) #> Warning: package 'sf' was built under R version 4.3.1 #> Linking to GEOS 3.11.2, GDAL 3.6.2, PROJ 9.2.0; sf_use_s2() is TRUE #> Warning: package 'sp' was built under R version 4.3.1 #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, will retire in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:. #> The sp package is now running under evolution status 2 #>      (status 2 uses the sf package in place of rgdal)  spc_rcv #> # A tibble: 25 × 3 #>    splits             id      id2   #>    <list>             <chr>   <chr> #>  1 <split [1503/419]> Repeat1 Fold1 #>  2 <split [1632/290]> Repeat1 Fold2 #>  3 <split [1573/349]> Repeat1 Fold3 #>  4 <split [1353/569]> Repeat1 Fold4 #>  5 <split [1627/295]> Repeat1 Fold5 #>  6 <split [1331/591]> Repeat2 Fold1 #>  7 <split [1648/274]> Repeat2 Fold2 #>  8 <split [1482/440]> Repeat2 Fold3 #>  9 <split [1654/268]> Repeat2 Fold4 #> 10 <split [1573/349]> Repeat2 Fold5 #> # ℹ 15 more rows"},{"path":"https://suvedimukti.github.io/stdcab/index.html","id":"visualize-clusters","dir":"","previous_headings":"","what":"Visualize clusters","title":"Spatial Thinning, Dependency, Clustering, And Blocking of Point Data \n    for Classification Problems","text":"Following chunk code function run split time visualize Analysis\\Training Assessment\\Testing set fold repeats.","code":"library(magrittr) #  #>  #> Attaching package: 'magrittr' #> The following object is masked from 'package:purrr': #>  #>     set_names fplot_splits <- function(split) {   gp <- analysis(split) %>%    dplyr::mutate(analysis = \"Training\") %>%    dplyr::bind_rows(assessment(split) %>%    dplyr::mutate(analysis = \"Testing\")) %>%     ggplot(aes(X, Y, color = analysis)) +     geom_point(alpha = 0.7, size = 2) +     coord_fixed() +     labs(color = \"Train/Test\") +     scale_color_viridis_d(direction = -1) +     xlab(\"Longitude (m)\") +     ylab(\"Latitidue (m)\")   print(gp) }"},{"path":"https://suvedimukti.github.io/stdcab/index.html","id":"plotting","dir":"","previous_headings":"","what":"Plotting","title":"Spatial Thinning, Dependency, Clustering, And Blocking of Point Data \n    for Classification Problems","text":"","code":"# plot using walk function from purrr package # this requires gifski package purrr::walk(spc_rcv$splits, fplot_splits)"},{"path":"https://suvedimukti.github.io/stdcab/reference/create_hexagon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Hexagons — create_hexagon","title":"Create Hexagons — create_hexagon","text":"function creates hexagon polygon based provided pair center coordinates, size, top type.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/create_hexagon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Hexagons — create_hexagon","text":"","code":"create_hexagon(center_x, center_y, size, top_type)"},{"path":"https://suvedimukti.github.io/stdcab/reference/create_hexagon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Hexagons — create_hexagon","text":"center_x x-coordinate hexagon center. center_y y-coordinate hexagon center. size size hexagon. based projection input data top_type type hexagon top, either \"flat\" \"pointy\".","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/create_hexagon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Hexagons — create_hexagon","text":"'sf' polygon representing created hexagon.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/create_hexagon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Hexagons — create_hexagon","text":"","code":"# Create a flat-topped hexagon with center coordinates (419093.9, 3149336) and size 5km flat_top <- create_hexagon(419093.9, 3149336, 50000, \"flat\") # plot plot((flat_top))  # create a pointy-topped hexagon with same arguments pointy_top <- create_hexagon(419093.9, 3149336, 50000, \"pointy\") # plot(pointy_top)"},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_multiple_variogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Multiple Variograms — fit_multiple_variogram","title":"Fitting Multiple Variograms — fit_multiple_variogram","text":"function returns experimental fitted variogram information multiple variables. variable autofitVariogram used. function supports spatial data simple features (sf), SpatialPointsDataFrame(sp) data.frame. input data data.frame, X, Y present data variables.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_multiple_variogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Multiple Variograms — fit_multiple_variogram","text":"","code":"fit_multiple_variogram(data, coords = c(\"X\", \"Y\"), length = 99)"},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_multiple_variogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Multiple Variograms — fit_multiple_variogram","text":"data input data set one sp, sf data.frame X Y variables coords (vector) pair coordinates data type aspatial length (integer) length sequence used produced fitted data.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_multiple_variogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Multiple Variograms — fit_multiple_variogram","text":"data frame combined information variables response returned. data.frame contains experimental variogram information, fitted variogram model information. sums squares (sserr) sample variogram dropped, information please refer autofitVariogram fit_variogram","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_multiple_variogram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting Multiple Variograms — fit_multiple_variogram","text":"automatp: index page automap package CRAN Hiemstra, P.H., Pebesma, E.J., Twenhofel, C.J.W. G.B.M. Heuvelink, 2008. Real-time automatic interpolation ambient gamma dose rates Dutch Radioactivity Monitoring Network. Computers & Geosciences.DOI:","code":""},{"path":[]},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_multiple_variogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Multiple Variograms — fit_multiple_variogram","text":"","code":"## Read data data(landcover) # subset data  lcdat <- landcover[, c(\"MBLU\", \"MNDVI\", \"MNIR\", \"MPC1\", \"MPC2\", \"MPC23\", \"MRED\", \"MSAVI\")]  # fit variograms  fmv <- fit_multiple_variogram(data = lcdat,coords = NULL,length = 99 ) #> [1] \"running semivariance analysis for variable : MBLU\" #> [1] \"running semivariance analysis for variable : MNDVI\" #> [1] \"running semivariance analysis for variable : MNIR\" #> [1] \"running semivariance analysis for variable : MPC1\" #> [1] \"running semivariance analysis for variable : MPC2\" #> [1] \"running semivariance analysis for variable : MPC23\" #> [1] \"running semivariance analysis for variable : MRED\" #> [1] \"running semivariance analysis for variable : MSAVI\"  if (FALSE) { data(\"landcover\") fit_multiple_variogram(data = landcover,coords = NULL, length = 99) }"},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_variogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Variogram Fitting on Quantitative Data — fit_variogram","title":"Variogram Fitting on Quantitative Data — fit_variogram","text":"function wrapper around autofitVariogram. function runs simple ordinary krigging. example, r esponse variable R formula supplied data R~1. Five experimental variogram models tested automatically selected response variable. function supports spatial data simple features (sf), SpatialPointsDataFrame(sp) data.frame. later format requires X, Y variables data.frame.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_variogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variogram Fitting on Quantitative Data — fit_variogram","text":"","code":"fit_variogram(data, response, coords = c(\"X\", \"Y\"))"},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_variogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variogram Fitting on Quantitative Data — fit_variogram","text":"data object SpatialPointsDataFrame-class, sf data.frame response response variable within quotes e.g. \"response\" coords (vector) pair coordinate input data data.frame \"sf\" \"sp\" object. X (Longitude) Y (Latitude) column variables input data set","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_variogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variogram Fitting on Quantitative Data — fit_variogram","text":"object type autofitVariogram returned. object contains experimental variogram,fitted variogram model sums squares (sserr) sample variogram fitted variogram model.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_variogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variogram Fitting on Quantitative Data — fit_variogram","text":"Five different types geostatistical models tested autofitVariogram, :Spherical (Sph), Gaussian (Gau), Exponential (Exp), Matern family (Mat), M.Stein's parameterization Matern model. information please refer original autofitVariogram function automap package.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_variogram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variogram Fitting on Quantitative Data — fit_variogram","text":"Hiemstra, P.H., Pebesma, E.J., Twenhofel, C.J.W. G.B.M. Heuvelink, 2008. Real-time automatic interpolation ambient gamma dose rates Dutch Radioactivity Monitoring Network. Computers & Geosciences.DOI: Pebesma, E.J., 2004. Multivariable geostatistics S: gstat package. Computers & Geosciences, 30: 683-691. Benedikt Gräler, Edzer Pebesma Gerard Heuvelink, 2016. Spatio-Temporal Interpolation using gstat.  R Journal 8(1), 204-218","code":""},{"path":[]},{"path":"https://suvedimukti.github.io/stdcab/reference/fit_variogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variogram Fitting on Quantitative Data — fit_variogram","text":"","code":"if (FALSE) { data(\"landcover\")  vfit<- fit_variogram(data = landcover,response = \"MPC1\",coords = NULL) vfit }"},{"path":"https://suvedimukti.github.io/stdcab/reference/generate_random_class.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to create random multiclass data.\nThis function allows you to create random spatial data for a specified number of classes (num_class)\nand replicates (num_rep) — generate_random_class","title":"A function to create random multiclass data.\nThis function allows you to create random spatial data for a specified number of classes (num_class)\nand replicates (num_rep) — generate_random_class","text":"function create random multiclass data. function allows create random spatial data specified number classes (num_class) replicates (num_rep)","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/generate_random_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to create random multiclass data.\nThis function allows you to create random spatial data for a specified number of classes (num_class)\nand replicates (num_rep) — generate_random_class","text":"","code":"generate_random_class(data, num_class, num_rep, return_sf = TRUE)"},{"path":"https://suvedimukti.github.io/stdcab/reference/generate_random_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to create random multiclass data.\nThis function allows you to create random spatial data for a specified number of classes (num_class)\nand replicates (num_rep) — generate_random_class","text":"data Input extent data 'sf', 'sp', 'Vect' num_class number required classes num_rep replication class return_sf (logical) true returns 'sf' object using coordinate system input data","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/generate_random_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to create random multiclass data.\nThis function allows you to create random spatial data for a specified number of classes (num_class)\nand replicates (num_rep) — generate_random_class","text":"'return_sf' TRUE, function returns 'sf' object containing generated classes. 'return_sf' FALSE, function returns data frame containing generated classes.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/generate_random_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to create random multiclass data.\nThis function allows you to create random spatial data for a specified number of classes (num_class)\nand replicates (num_rep) — generate_random_class","text":"","code":"# Load sample data data(\"landcover\")  # Generate random classes with 5 classes and 100 replicates per class samp_data <- generate_random_class(landcover, 5, 100,return_sf = FALSE) head(samp_data) #>          x       y class #> 1 408683.6 3121155     1 #> 2 435521.3 3128639     1 #> 3 457853.5 3167238     1 #> 4 429557.9 3154871     1 #> 5 459663.1 3127548     1 #> 6 426685.8 3127122     1"},{"path":"https://suvedimukti.github.io/stdcab/reference/landcover.html","id":null,"dir":"Reference","previous_headings":"","what":"Land Use Land Cover (LULC) Data for Classification Problem — landcover","title":"Land Use Land Cover (LULC) Data for Classification Problem — landcover","text":"land use land cover data generated using heads-(onscreen) digitization using National Agriculture Imagery Program (NAIP) digital orthoimagery data acquired 2018.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/landcover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Land Use Land Cover (LULC) Data for Classification Problem — landcover","text":"","code":"landcover"},{"path":"https://suvedimukti.github.io/stdcab/reference/landcover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Land Use Land Cover (LULC) Data for Classification Problem — landcover","text":"data frame 1922 rows 32 variables: MBLU double mean Blue MDIS double Mean Dissimilarity MENT double mean Entropy MGRN double Mean Green MHOM double Mean Homogeneity MNDSI double Mean Normalized Difference Soil Index MNDVI double Mean Normalized Difference Vegetation Index MNDWI double Mean Normalized Difference Water Index MNIR double Mean Near infrared MPC1 double Mean Principal Component Axis 1 MPC2 double double Mean Principal Component Axis 2 MPC23 double double Mean Principal Component Axis 3 MRED double Mean Red MSAVI double Mean Soil Adjusted Vegetation Index MSTD double Mean Standard Deviation SAVG double Standard deviation AVG SAVI double Standard deviation SAVI SBLU double Standard deviation Blue SDIS double Standard deviation Dissimilarity SENT double Standard deviation Entropy SGRN double Standard deviation Green SHOM double Standard deviation Homogeneity SHPI double Shape Index SNDSI double Standard deviation NDSI SNDVI double Standard deviation NDVI SNIR double Standard deviation Near infrared SPC1 double Standard deviation PCA1 SPC2 double Standard deviation PCA2 SPC3 double Standard deviation PCA3 SRED double Standard deviation Red SSTD double Standard deviation Standard Deviation geometry list Geometry Information Class_name double land use land cover classes 1 7","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/landcover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Land Use Land Cover (LULC) Data for Classification Problem — landcover","text":"Slightly doctored training data set land use land cover. Original data points generated using heads-(-screen) digitization. data 31 predictor variables 1 dependent multi class (Class_name) variable 1922 records.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/optimal_kmeans_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal K-means Clustering — optimal_kmeans_cluster","title":"Optimal K-means Clustering — optimal_kmeans_cluster","text":"function performs k-means clustering spatial non-spatial data determines optimal number clusters based either within-cluster sum squares average silhouette width.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/optimal_kmeans_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal K-means Clustering — optimal_kmeans_cluster","text":"","code":"optimal_kmeans_cluster(   data,   spatial = TRUE,   coords = NULL,   max_cluster = 2L,   method = c(\"wss\", \"silhouette\") )"},{"path":"https://suvedimukti.github.io/stdcab/reference/optimal_kmeans_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal K-means Clustering — optimal_kmeans_cluster","text":"data input data clustering. can 'sf' object, 'SpatialPoints' object, data frame coordinates. spatial Logical indicating whether input data spatial (default TRUE). set FALSE, data assumed non-spatial clustering performed provided coordinates. coords column names coordinates data (required spatial set FALSE). max_cluster maximum number clusters consider. method method determine optimal number clusters. can \"wss\" (within-cluster sum squares) \"silhouette\" (average silhouette width).","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/optimal_kmeans_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal K-means Clustering — optimal_kmeans_cluster","text":"list containing clustering results (data frame) plot selected method (ggplot object).","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/optimal_kmeans_cluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal K-means Clustering — optimal_kmeans_cluster","text":"","code":"if (FALSE) { data(\"landcover\") okc <- optimal_kmeans_cluster(data = landcover,spatial = TRUE,coords = NULL,                               max_cluster = 15, method =  \"wss\") # look at data okc$data }"},{"path":"https://suvedimukti.github.io/stdcab/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://suvedimukti.github.io/stdcab/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_multiple_variogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Multiple Variograms — plot_multiple_variogram","title":"Plotting Multiple Variograms — plot_multiple_variogram","text":"function uses ggplot2 framework plot semivariogram object (tibble) result fit_multiple_variogram.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_multiple_variogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Multiple Variograms — plot_multiple_variogram","text":"","code":"plot_multiple_variogram(object, plot_type = \"line\", show_range = TRUE)"},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_multiple_variogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Multiple Variograms — plot_multiple_variogram","text":"object output fit_multiple_variogram function plot_type plot type \"bar\" \"line\". \"linePoint\" \"pointLine\" \"line\", \"point\" used use point line format. show_range (logical) whether display range plot","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_multiple_variogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting Multiple Variograms — plot_multiple_variogram","text":"list multiple semivariance plot variables tibble fitted semivariances variables.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_multiple_variogram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plotting Multiple Variograms — plot_multiple_variogram","text":"Pebesma, E.J., 2004. Multivariable geostatistics S: gstat package. Computers & Geosciences, 30: 683-691. Benedikt Gräler, Edzer Pebesma Gerard Heuvelink, 2016. Spatio-Temporal Interpolation using gstat.  R Journal 8(1), 204-218 Hiemstra, P.H., Pebesma, E.J., Twenhofel, C.J.W. G.B.M. Heuvelink, 2008. Real-time automatic interpolation ambient gamma dose rates Dutch Radioactivity Monitoring Network. Computers & Geosciences.DOI: H. Wickham. ggplot2: Elegant Graphics Data Analysis. Springer-Verlag New York, 2016.","code":""},{"path":[]},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_multiple_variogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Multiple Variograms — plot_multiple_variogram","text":"","code":"##  Run semivariance on Principal Component Axis1 # read data data(\"landcover\")  # remove factor variable  landcover$class_name <- NULL  # fit multiple variograms  mvfit  <- fit_variogram(data = landcover, response = \"MPC1\", coords = NULL)  mvplot <- plot_variogram(object = mvfit, length = 99, show_range = TRUE)   if (FALSE) { # load data data(\"landcover\")  # remove factor variable landcover$Class_name<- NULL  # fit multiple variograms mfit  <- multiple_variogram(data = landcover,coords = NULL, length = 99)  mplot <- plot_multiple_variogram (mfit, plot_type = \"line\", show_range = FALSE)  # Display the plot  mplot$plot  # View tibble mplot$data }"},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_variogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Single Sevariance Model — plot_variogram","title":"Plot Single Sevariance Model — plot_variogram","text":"function uses ggplot2 framework plot semivariogram object results fit_variogram.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_variogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Single Sevariance Model — plot_variogram","text":"","code":"plot_variogram(object, length = 99, show_range = TRUE)"},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_variogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Single Sevariance Model — plot_variogram","text":"object output fit_variogram function length (integer) length sequence used produced fitted data. show_range (logical) whether display range plot","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_variogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Single Sevariance Model — plot_variogram","text":"list plot tibble semivariogram information","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_variogram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Single Sevariance Model — plot_variogram","text":"Pebesma, E.J., 2004. Multivariable geostatistics S: gstat package. Computers & Geosciences, 30: 683-691. Benedikt Gräler, Edzer Pebesma Gerard Heuvelink, 2016. Spatio-Temporal Interpolation using gstat.  R Journal 8(1), 204-218 Hiemstra, P.H., Pebesma, E.J., Twenhofel, C.J.W. G.B.M. Heuvelink, 2008. Real-time automatic interpolation ambient gamma dose rates Dutch Radioactivity Monitoring Network. Computers & Geosciences.DOI: H. Wickham. ggplot2: Elegant Graphics Data Analysis. Springer-Verlag New York, 2016.","code":""},{"path":[]},{"path":"https://suvedimukti.github.io/stdcab/reference/plot_variogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Single Sevariance Model — plot_variogram","text":"","code":"##  Run semivariance on Principal Component Axis1 # read data data(\"landcover\")  vfit  <- fit_variogram(data = landcover, response = \"MPC1\", coords = NULL) vplot <- plot_variogram(object = vfit, length = 99, show_range = TRUE)  # plot  vplot$plot   vfit_pc2  <- fit_variogram(data = landcover, response = \"MPC1\", coords = NULL) vplot_pc2  <- plot_variogram(object = vfit_pc2, length = 99, show_range = FALSE)  # plot  vplot_pc2$plot   if (FALSE) { data(\"landcover\")  vfit  <- fit_variogram(data = landcover,response = \"ASYM\",coords = NULL) vplot <- plot_variogram(object = vfit, length = 99, show_range = TRUE)  # plot variogram  vplot$plot # data vplot$data  }"},{"path":"https://suvedimukti.github.io/stdcab/reference/repeated_spatial_cluster_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeated Spatial Clustering of Point Data for Tidy Modeling — repeated_spatial_cluster_sample","title":"Repeated Spatial Clustering of Point Data for Tidy Modeling — repeated_spatial_cluster_sample","text":"Repeated spatial cluster sampling splits data V groups using partitioning (kmeans)/ hierarchical(hclust) clustering variables, typically spatial coordinates. resample analysis data works spatial_cluster_sample repeats. number resamples equal fold * repeats, resample sizes equal across folds repeats.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/repeated_spatial_cluster_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated Spatial Clustering of Point Data for Tidy Modeling — repeated_spatial_cluster_sample","text":"","code":"repeated_spatial_cluster_sample(   data = data,   v = 10,   repeats = 1,   coords = c(\"X\", \"Y\"),   strata = NULL,   breaks = 4,   pool = 0.1,   spatial = FALSE,   clust_method = \"kmeans\",   dist_clust = NULL,   ... )"},{"path":"https://suvedimukti.github.io/stdcab/reference/repeated_spatial_cluster_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated Spatial Clustering of Point Data for Tidy Modeling — repeated_spatial_cluster_sample","text":"data data input data set one sp, sf data.frame X Y variables v number partitions data set number clusters repeats number repetitions partition data set coords (vector) pair coordinates data type aspatial data.frame strata (character) strata variable; default NULL, yield good results stratification based class/strata breaks (integer) single number giving number bins desired stratify numeric stratification variable pool (numeric) proportion data used determine particular group small pooled another group. Default 0.1 vfold_cv spatial (logical) data set spatial (sf sp) aspatial (data.frame) clust_method one partitioning (default = kmeans) one hierarchical methods(hclust) dist_clust agglomeration method used. one “ward.D”, “ward.D2”, “single”, “complete”, “average” (= UPGMA), “mcquitty” (= WPGMA), “median” (= WPGMC) “centroid” (= UPGMC). dist_clust function method stats::hclust ... currently used","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/repeated_spatial_cluster_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeated Spatial Clustering of Point Data for Tidy Modeling — repeated_spatial_cluster_sample","text":"tibble classes spatial_cv, rset, tbl_df, tbl, data.frame. results include column data split objects one identification variables. single repeat, one column called id character string fold identifier. repeats, id repeat number additional column called id2 contains fold information (within repeat).","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/repeated_spatial_cluster_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Repeated Spatial Clustering of Point Data for Tidy Modeling — repeated_spatial_cluster_sample","text":"variables coords argument, input data data.frame extracted sp, sf data used  clustering data disjointed sets. clusters used folds cross-validation. Depending data distributed spatially. function similar repeated cross validation v-fold cross validation vfold_cv spatial data clustering.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/repeated_spatial_cluster_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Repeated Spatial Clustering of Point Data for Tidy Modeling — repeated_spatial_cluster_sample","text":". Brenning, \"Spatial cross-validation bootstrap assessment prediction rules remote sensing: R package sperrorest,\" 2012 IEEE International Geoscience Remote Sensing Symposium, Munich, 2012, pp. 5372-5375, doi: 10.1109/IGARSS.2012.6352393. Julia Silge (2021). spatialsample: Spatial Resampling Infrastructure. https://github.com/tidymodels/spatialsample, https://spatialsample.tidymodels.org. Julia Silge, Fanny Chow, Max Kuhn Hadley Wickham (2021). rsample: General Resampling Infrastructure. R package version 0.1.1. https://CRAN.R-project.org/package=rsample","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/repeated_spatial_cluster_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeated Spatial Clustering of Point Data for Tidy Modeling — repeated_spatial_cluster_sample","text":"","code":"if (FALSE) { data(\"landcover\")  rscv<- repeated_spatial_cluster_sample(data = landcover,coords = NULL, v = 10,       repeats = 5, spatial = TRUE, clust_method = \"kmeans\",       dist_clust = NULL, breaks = 4, pool = 0.1)  rscv }"},{"path":"https://suvedimukti.github.io/stdcab/reference/rotate_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Features — rotate_features","title":"Rotate Features — rotate_features","text":"function rotates features input spatial object specified rotation angle rotation base.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/rotate_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Features — rotate_features","text":"","code":"rotate_features(input_sf, rotation_angle = NULL, rotation_base = \"center\")"},{"path":"https://suvedimukti.github.io/stdcab/reference/rotate_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Features — rotate_features","text":"input_sf input spatial object rotated. can 'sf' object 'Spatial' object. rotation_angle angle rotation degrees. rotation_base rotation base. can \"center\" coordinate specifying rotation base.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/rotate_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Features — rotate_features","text":"list containing rotation base rotated features 'sf' object.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/rotate_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate Features — rotate_features","text":"","code":"# Load sample data data(landcover)  # Rotate the landcover data by 45 degrees around the center  rot_coords <- rotate_features(input_sf = landcover, rotation_angle = 45, rotation_base = \"center\")"},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_cluster_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Clustering of Points Data for Tidy-modeling — spatial_cluster_sample","title":"Spatial Clustering of Points Data for Tidy-modeling — spatial_cluster_sample","text":"wrapper function around spatial_clustering_cv spatialsample. Spatial cluster sampling splits data V groups groups using partitioning (kmeans)/ hierarchical(hclust) clustering variables, typically spatial coordinates. resample analysis data consists V-1 folds/clusters assessment set contains final fold/cluster. basic spatial cross-validation (.e. repeats), number resamples equal V.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_cluster_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Clustering of Points Data for Tidy-modeling — spatial_cluster_sample","text":"","code":"spatial_cluster_sample(   data = data,   coords = NULL,   v = 10,   spatial = TRUE,   clust_method = \"kmeans\",   dist_clust = NULL,   ... )"},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_cluster_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Clustering of Points Data for Tidy-modeling — spatial_cluster_sample","text":"data input data set one sp, sf data.frame X Y variables coords (vector) pair coordinates data type aspatial v number partitions data set number clusters spatial (logical) data set spatial (sf sp) aspatial (data.frame) clust_method one partitioning (default = kmeans) one hierarchical methods(hclust) dist_clust agglomeration method used. one “ward.D”, “ward.D2”, “single”, “complete”, “average” (= UPGMA), “mcquitty” (= WPGMA), “median” (= WPGMC) “centroid” (= UPGMC). dist_clust function method stats::hclust ... Extra arguments passed stats::kmeans() stats::hclust()","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_cluster_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Clustering of Points Data for Tidy-modeling — spatial_cluster_sample","text":"tibble classes spatial_cv, rset, tbl_df, tbl, data.frame. results include column data split objects identification variable id.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_cluster_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial Clustering of Points Data for Tidy-modeling — spatial_cluster_sample","text":"variables coords argument, input data data.frame extracted sp, sf data used  clustering data disjointed sets. clusters used folds cross-validation. Depending data distributed spatially. Since function heavily relies \"spatialsample\" attributes class attributes modified . fact, information holds true case repeated_spatial_cluster_sample.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_cluster_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial Clustering of Points Data for Tidy-modeling — spatial_cluster_sample","text":". Brenning, \"Spatial cross-validation bootstrap assessment prediction rules remote sensing: R package sperrorest,\" 2012 IEEE International Geoscience Remote Sensing Symposium, Munich, 2012, pp. 5372-5375, doi: 10.1109/IGARSS.2012.6352393. Julia Silge (2021). spatialsample: Spatial Resampling Infrastructure. https://github.com/tidymodels/spatialsample, https://spatialsample.tidymodels.org. Julia Silge, Fanny Chow, Max Kuhn Hadley Wickham (2021). rsample: General Resampling Infrastructure. R package version 0.1.1. https://CRAN.R-project.org/package=rsample","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_cluster_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial Clustering of Points Data for Tidy-modeling — spatial_cluster_sample","text":"","code":"# spatial point clustering  # read data  data(\"landcover\")  # setting seeds  set.seed(1318)  spc_fold<- spatial_cluster_sample(data = landcover,coords = NULL,v = 10,spatial = TRUE,                                  clust_method = \"kmeans\") #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE class(spc_fold) #> [1] \"spatial_clustering_cv\" \"rset\"                  \"tbl_df\"                #> [4] \"tbl\"                   \"data.frame\"              if (FALSE) { data(\"landcover\")  scv<- spatial_cluster_sample(data = landcover,coords = NULL, v = 10, spatial = TRUE,            clust_method = \"kmeans\",dist_clust = NULL,) scv }"},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_hexgrid_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Hexagonal Grid Sampling — spatial_hexgrid_sample","title":"Spatial Hexagonal Grid Sampling — spatial_hexgrid_sample","text":"function generates hexagonal grid performs spatial sampling based provided data parameters.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_hexgrid_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Hexagonal Grid Sampling — spatial_hexgrid_sample","text":"","code":"spatial_hexgrid_sample(   data,   sidelength,   top_type = \"flat\",   show_grid = TRUE,   fold_selection = \"default\",   k = NULL )"},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_hexgrid_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Hexagonal Grid Sampling — spatial_hexgrid_sample","text":"data input data. can either sf object SpatialPoints object. sidelength length hexagon's side. top_type type hexagon top, either \"flat\" \"pointy\". Default \"flat\". show_grid Logical value indicating whether display hexagonal grid. Default TRUE. fold_selection method fold selection. Options include \"default\", \"systematic\", \"random\". Default \"default\". k number folds fold selection. Required 'fold_selection' \"systematic\" \"random\". Default NULL.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_hexgrid_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Hexagonal Grid Sampling — spatial_hexgrid_sample","text":"list containing plots ('show_grid' TRUE), hexagonal blocks (sf object), split objects.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_hexgrid_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial Hexagonal Grid Sampling — spatial_hexgrid_sample","text":"","code":"# Load sample data data(landcover)  # Generate a spatial hexagonal grid sampling with a sidelength of # 10 km and 5 folds using systematic selection hexgrid <- spatial_hexgrid_sample(landcover, sidelength = 10000,             fold_selection = \"systematic\", k = 5) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries"},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_quadgrid_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Quadgrid Sampling — spatial_quadgrid_sample","title":"Spatial Quadgrid Sampling — spatial_quadgrid_sample","text":"function generates regular rectangular grids performs spatial sampling based provided data parameters. result function similar Generate Tessellation tool ESRI's ArcGIS software square rectangle polygons possible. extent point coordinates divided number possible grids based values cellsize. cellsize length width polygon created. point spatial_quadgrid_sample spatial_hexgrid_sampleare different function. reason rotation original data resultant grid possible regular rectangular grids. future functions can merged together","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_quadgrid_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Quadgrid Sampling — spatial_quadgrid_sample","text":"","code":"spatial_quadgrid_sample(   data,   cellsize = c(10000, 10000),   offset = c(0, 0),   show_grid = TRUE,   rotation_angle = NULL,   fold_selection = \"default\",   k = NULL )"},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_quadgrid_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Quadgrid Sampling — spatial_quadgrid_sample","text":"data input data. can either 'sf' object SpatialPoints object. cellsize size grid cells, provided numeric vector two values representing x y dimensions. offset offset grid, provided numeric vector two values representing x y offsets. show_grid Logical value indicating whether display quadgrid. Default TRUE. rotation_angle angle rotation quadgrid. Default NULL. fold_selection method fold selection. Options include \"default\", \"systematic\", \"random\". Default \"default\". k number folds fold selection. Required fold_selection \"systematic\" \"random\". Default NULL.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_quadgrid_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Quadgrid Sampling — spatial_quadgrid_sample","text":"list containing plots ('show_grid' TRUE), quadgrid blocks (sf object), split objects.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_quadgrid_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial Quadgrid Sampling — spatial_quadgrid_sample","text":"spatial grid sample generates tessellation fishnet ESRI's ArcGIS software, Currently sp, sf Vect data allowed. grid shows number samples within grid grid number e.g. (80,1). default selection  numbers grids bottom left increases row wise. random selection assigns grid number randomly. systematic grid numbering happens bottom right column wise. random selection ' name applies select grids randomly, systematic selection option allows select grids sequentially k","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_quadgrid_sample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial Quadgrid Sampling — spatial_quadgrid_sample","text":"Pebesma, E., 2018. Simple Features R: Standardized Support Spatial Vector Data. R Journal 10 (1), 439-446, https://doi.org/10.32614/RJ-2018-009","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_thinning_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial thinning of multi claass point data — spatial_thinning_class","title":"Spatial thinning of multi claass point data — spatial_thinning_class","text":"function wrapper around thin spThin package. makes spatial thinning easy multi-class input data set. function handy flexible: can support xy coordinates, spatialPoints, simple features. assumes data projected planar coordinates system; preferably Universal Transverse Mercator (UTM). restrictions number columns data set long data required format.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_thinning_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial thinning of multi claass point data — spatial_thinning_class","text":"","code":"spatial_thinning_class(   data,   spatial = FALSE,   coords = c(\"X\", \"Y\"),   distance,   class = \"class\" )"},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_thinning_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial thinning of multi claass point data — spatial_thinning_class","text":"data input data. can either 'sf' object, 'SpatialPoints' object, data frame. spatial Logical value indicating whether input data spatial data (either 'sf' 'SpatialPoints'). Default FALSE. coords names coordinate variables use spatial operations. default, set c(\"X\", \"Y\"). distance distance threshold thinning. Points within distance reduced single point. class multi-class variable strata variable. class thinning applied based specified distance.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_thinning_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial thinning of multi claass point data — spatial_thinning_class","text":"data frame containing spatially thinned classes.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_thinning_class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial thinning of multi claass point data — spatial_thinning_class","text":"Spatial thinning expect data projected coordinate system, distance value threshold limits number observations. observations, particular class, smaller distance thresholds deleted. two classes, minimum distance observations class.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_thinning_class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial thinning of multi claass point data — spatial_thinning_class","text":"Aiello-Lammens, M. E., Boria, R. ., Radosavljevic, . , Vilela, B. Anderson, R. P. (2015). spThin: Rpackage spatial thinning species occurrence records use ecological niche models. Ecography, 38:541-545. URL https://onlinelibrary.wiley.com/doi/10.1111/ecog.01132.","code":""},{"path":"https://suvedimukti.github.io/stdcab/reference/spatial_thinning_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial thinning of multi claass point data — spatial_thinning_class","text":"","code":"## load data from the package tdat <- landcover  # Run spatial thinning (sf format) stc <- spatial_thinning_class(data = tdat,spatial = TRUE, coords = NULL,distance = 10000,class = \"Class_name\") #> [1] \"Running spatial random thinning of class: 1\" #> [1] \"Running spatial random thinning of class: 2\" #> [1] \"Running spatial random thinning of class: 3\" #> [1] \"Running spatial random thinning of class: 4\" #> [1] \"Running spatial random thinning of class: 5\" #> [1] \"Running spatial random thinning of class: 6\" #> [1] \"Running spatial random thinning of class: 7\"   if (FALSE) { data <- landcover spatial_thinning_class(data = landcover, spatial = TRUE, coords = NULL, distance = 10000, class = \"Class_name\") }"},{"path":"https://suvedimukti.github.io/stdcab/reference/stdcab-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stdcab: Spatial Thinning, Dependency, Clustering, And Blocking of Point Data for Classification Problems — stdcab-package","title":"stdcab: Spatial Thinning, Dependency, Clustering, And Blocking of Point Data for Classification Problems — stdcab-package","text":"Functions spatial point data spatial thinning, clustering, blocking structure analysis. Results spatial clustering blocking resampling objects machine learning using tidy modelling framework.","code":""},{"path":[]},{"path":"https://suvedimukti.github.io/stdcab/reference/stdcab-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stdcab: Spatial Thinning, Dependency, Clustering, And Blocking of Point Data for Classification Problems — stdcab-package","text":"Maintainer: Mukti Subedi suvedimukti@gmail.com (ORCID)","code":""}]
